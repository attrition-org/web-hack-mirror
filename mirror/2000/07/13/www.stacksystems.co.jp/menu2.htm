<html><head>
<title>アプリケーションコンサルティング</title>
<body bgcolor=#cccccc vlink=#000000 link=#000000 background="bg.gif">

<SCRIPT LANGUAGE="JavaScript">
  function EnlivenPrint() {
    print();
    return true;
  }
  
  function PrevPage() {
    history.go(-1);
  }
  
</SCRIPT>
</head>

<center>
<table border=1 width=620 bgcolor=#ffffff CELLPADDING=10 CELLSPACING=0>
<td><table bgcolor=#ffffff>
<td><img src="b3.gif"></td><tr>
<tr></tr>
<tr></tr>
<td><font size=+2><b>当社では次の基本理念を基に、最良のクライアント／サーバーアプリケーションの実現方法のご提案を行っています。</b></font></td><tr>
<td><table>
<td valign=top>■</td><td><font size=+1>"有名だから"、"みんなが使っているから"、こんな理由で開発ツールの選択は行わない</font></td></tr>
<td valign=top>■</td><td><font size=+1>無理に大規模なシステム構成にせず、システム導入による利益を得ながらシステムのアップサイジングを行う</font></td><tr>
<td valign=top>■</td><td><font size=+1>必要であれば、コンサルティングだけでなくアプリケーションの作成も行い、最良の結果を示す</font></td><tr>
</td></table>
<tr></tr>
<tr></tr>
<td><table width=100% CELLPADDING=4 CELLSPACING=0>
<td width=100% bgcolor=#ddddff><font size=+1><b>Delphi</b>によるC/Sアプリケーション開発</font></td><tr>
<td>　現在クライアント／サーバーシステムの開発には、某ＯＳを提要しているメーカーの開発ツールを使っている場合が多々見られます。しかし開発を実際に行っている開発者は、これらの開発ツールが非常に優れており、開発上の問題が全くなく顧客からも十分な評価が得られているとは感じていません。一般的には、顧客側から開発ツールの指定があるのは希です。多くの場合、開発者が現在開発可能なツールを使って行われる場合がほとんどではないでしょうか。これらの現象が続けば当然ある特定の開発ツールだけがメジャーとなり、他の開発ツールを使用することはタブーになってしまいます。それは、万一メジャーではない開発ツールを使ってシステム構築に失敗した場合、”やっぱりメジャーでない開発ツールを使わなかったからだ！”と評価され、責任問題になるからです。しかしこれらのことは、どのような開発ツールでも１００％使いこなせることができ、適切な提案が行える開発者にとっては、何の傷害にもなりません。<br>
　当社では、これらの理由から<b>Delphi</b>をクライアント／サーバーシステムの構築ツールとして採用しました。<b>Delphi</b>を使った開発では、従来クライアント／サーバーアプリケーションを開発する際に必ず問題となってきた諸問題をいとも簡単に解決することができ、開発効率、実行スピード、システムのアップグレード性など、あらゆる点で他の開発ツールを凌いでいます。多くの開発者は現在<b>Delphi</b>を使った開発が、開発者と顧客に対して最も有益であることも知らず、現在開発に使用している開発ツールを使用し続けることが最良のクライアント／サーバーシステムを構築できると信じ、今日も開発効率が悪く、スピードの遅いODBCを使ったシステムを提案しているのです。
</td>
</td></table>
<tr></tr>
<tr></tr>
<td><table width=100% CELLPADDING=4 CELLSPACING=0>
<td width=100% bgcolor=#ddddff><font size=+1>完全なオブジェクト指向言語による開発のメリット</font></td><tr>
<td>　<b>Delphi</b>を使った開発では、多くのメリットを開発者、顧客共にもたらします。その中の１つに完全なオブジェクト指向言語によるメリットが上げられます。オブジェクト指向言語を用いることで得られるメリットについては、一部の開発者しか正しくオブジェクト指向言語の機能と特徴を理解していないため、あまり大したメリットはないと言う風潮があります。このため現在でも完全なオブジェクト指向言語とは程遠い言語を用いて行う開発が多くを占めているのです。完全なオブジェクト指向言語を用いて行われる開発がいかに優れていて、開発者と顧客にメリットをもたらすかは簡単には説明できませんが、次の一例をを上げることができます。<br><br>
<table width=580>
<th rowspan=2 valign=top>１</th>
<td>アプリケーションを各部品単位に作成し、組み立てることができる。</td><tr>
<td>　部品は、機能や種類別にオブジェクトとして作成することができます。部品をオブジェクトとして作成すると言うことは、サブルーチンを作成するのとは全く異なります。オブジェクトにはそれぞれクラスと言う定義(設計図)を持って、この設計図を変更するだけで組み立て済であるかないかに関わらず、部品の機能などを変更することができます。</td><tr>
<th rowspan=2 valign=top>２</th>
<td>各部品の内、どれに変更や機能アップを行っても、他の部品に影響が及ぶことがなく、アプリケーションの安全性を容易に保てる。</td><tr>
<td>　オブジェクトの場合、各オブジェクト毎に機能や体裁などがカプセル化されているため、オブジェクトの変更を行っても他のオブジェクトには全く影響がありません。このためデバックが容易になり、アプリケーションの安全性を高めると共に、容易にオブジェクトの変更を行うことができるなります。</td><tr>
<th rowspan=2 valign=top>３</th>
<td>クラスは継承させることができ、アプリケーション全体に変更を反映させることができる</td><tr>
<td>　クラスは派生させることにより、新たな機能を持ったクラスを作成することができます。これは、親の遺伝子を子供が受け継ぐのに似ています。しかし遺伝子と違う点は、親の情報が変更されると自動的に子供に変更が反映される点あります。つまりこのことは、オブジェクト指向プログラミングで作成されたアプリケーションは、システムの基本的な要素に変更を加えても、ソースコードの変更は必要ないか、最小限で済むことを意味しています。</td><tr>
</table></td><tr>
<td>　この他にも数多くのメリットがありますが、これらのメリットを実感できるのは、<b>Delphi</b>で開発を行った者しか味わうことはできないでしょう。顧客がこれらのメリットを味わう時は、アプリケーションに変更を加える要望を出す時になるでしょう。</td>
</td></table>
<tr></tr>
<tr></tr>
<td><table width=100% CELLPADDING=4 CELLSPACING=0>
<td width=100% bgcolor=#ddddff><font size=+1>プロトタイピング手法によるシステム開発</font></td><tr>
<td>　オブジェクト指向言語でない開発ツールを使用してアプリケーション開発を行う場合、システムを利用するユーザーとシステムの内容について十分に検討を行い、仕様を綿密に作成してからコーディングを始める必要があります。これは、後から仕様の変更や追加仕様があった場合、大きな費用が発生してしまうためです。<b>Delphi</b>のような完全にオブジェクト指向化された開発ツールを使ってアプリケーション開発を行う場合、プロトタイピング開発を容易に行うことができます。プロトタイピング開発は、ユーザーの要求仕様に基づき、ある程度の基本的な機能を持ったプロトタイプを作成します。このプロトタイプを基にユーザーと動作の検証を重ねることにより、より具体的で正確な要求をユーザーが得ることができ、完成度の高いアプリケーションを作成することができます。優れた開発ツールであればある程、プロトタイピング開発の成果が期待でき、開発効率を高めることができます。<br>
　当社では、単なるコンサルティングでなく、アプリケーションのプロトタイプ作成を含めたコンサルティングを行っています。</td>
</td></table>

</td></table>
</table>

<FORM>
<INPUT TYPE="BUTTON" VALUE="前のページに戻る" ONCLICK="PrevPage()">
<INPUT TYPE="BUTTON" VALUE="このページを印刷する" ONCLICK="EnlivenPrint()">
</FORM>

</center>
</body>
</html>
